{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lion\\\\Downloads\\\\Telegram Desktop\\\\my-app\\\\src\\\\component\\\\App\\\\App.js\";\nimport React from \"react\";\nimport AppHeader from \"../AppHeader\";\nimport PostAddForm from \"../PosrAddForm\";\nimport PostList from \"../PostList/PostList\";\nimport PostStatusFilter from \"../PostStastusFilter\";\nimport SearchPanel from \"../SearchPanel\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: \"Going to React JS\",\n        important: false,\n        like: false,\n        id: 1\n      }, {\n        label: \"That is so good\",\n        important: false,\n        like: false,\n        id: 2\n      }, {\n        label: \"I need a break... \",\n        important: false,\n        like: false,\n        id: 3\n      }],\n      term: '',\n      filter: 'all'\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.maxId = 4;\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.filterPost = this.filterPost.bind(this);\n    this.onFilterSelect = this.onFilterSelect.bind(this);\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n      const newArry = [...before, ...after];\n      return {\n        data: newArry\n      };\n    });\n  }\n\n  onAdd(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const oldItem = data[index];\n      const newItem = { ...oldItem,\n        important: !oldItem.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const oldItem = data[index];\n      const newItem = { ...oldItem,\n        like: !oldItem.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  onUpdateSearch(term) {\n    this.setState({\n      term: term\n    });\n  }\n\n  filterPost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  onFilterSelect() {\n    this.setState({\n      filter\n    });\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visablePost = this.filterPost(this.searchPost(data, term), filter);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        liked: liked,\n        allPosts: allPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onUpdateSearch: this.onUpdateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {\n          filter: filter,\n          onFilterSelect: this.onFilterSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: visablePost,\n        onDelete: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleLiked: this.onToggleLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n        onAdd: this.onAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lion/Downloads/Telegram Desktop/my-app/src/component/App/App.js"],"names":["React","AppHeader","PostAddForm","PostList","PostStatusFilter","SearchPanel","App","Component","constructor","props","state","data","label","important","like","id","term","filter","deleteItem","bind","onAdd","onToggleImportant","onToggleLiked","maxId","onUpdateSearch","filterPost","onFilterSelect","setState","index","findIndex","elem","before","slice","after","newArry","body","newItem","newArr","oldItem","searchPost","items","length","item","indexOf","render","liked","allPosts","visablePost"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AppHeader from \"../AppHeader\";\r\nimport PostAddForm from \"../PosrAddForm\";\r\nimport PostList from \"../PostList/PostList\";\r\nimport PostStatusFilter from \"../PostStastusFilter\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport './App.css'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"Going to React JS\", important: false, like: false, id: 1 },\r\n                { label: \"That is so good\", important: false, like: false, id: 2 },\r\n                { label: \"I need a break... \", important: false, like: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.onAdd = this.onAdd.bind(this)\r\n        this.onToggleImportant = this.onToggleImportant.bind(this)\r\n        this.onToggleLiked = this.onToggleLiked.bind(this)\r\n        this.maxId = 4;\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n        this.filterPost = this.filterPost.bind(this)\r\n        this.onFilterSelect=this.onFilterSelect.bind(this)\r\n    }\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const before = data.slice(0, index)\r\n            const after = data.slice(index + 1)\r\n\r\n            const newArry = [...before, ...after]\r\n            return {\r\n                data: newArry\r\n            }\r\n        })\r\n    }\r\n    onAdd(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, important: !oldItem.important }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, like: !oldItem.like }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter(item => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n    onUpdateSearch(term) {\r\n        this.setState({ term: term })\r\n\r\n    }\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n    onFilterSelect () {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter } = this.state\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visablePost = this.filterPost(this.searchPost(data, term), filter)\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList\r\n                    posts={visablePost}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm onAdd={this.onAdd} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}