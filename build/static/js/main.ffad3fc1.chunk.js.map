{"version":3,"sources":["component/AppHeader/index.js","component/AppHeader/AppHeader.js","component/PosrAddForm/index.js","component/PosrAddForm/PostAddForm.js","component/PostListItem/PostListItem.js","component/PostListItem/index.js","component/PostList/PostList.js","component/PostStastusFilter/index.js","component/PostStastusFilter/PostStatusFilter.js","component/SearchPanel/index.js","component/SearchPanel/SearchPanel.js","component/App/index.js","component/App/App.js","index.js"],"names":["AppHeader","liked","allPosts","className","PostAddForm","props","state","text","onValueChange","bind","onSabmit","e","this","setState","target","value","preventDefault","onAdd","onSubmit","type","placeholder","onChange","React","Component","PostListItem","label","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","onClick","PostList","posts","elements","map","item","id","itemProps","PostStatusFilter","buttons","name","clazz","filter","onFilterSelect","SearchPanel","term","onUpdateSearch","App","data","deleteItem","maxId","filterPost","index","findIndex","elem","before","slice","after","body","newItem","oldItem","items","length","indexOf","visablePost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffad3fc1.chunk.js","sourcesContent":["import AppHeader from \"./AppHeader\";\r\nexport default AppHeader","import './AppHeader.css'\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className='app-header d-flex col-md-12'>\r\n            <h1>Bintu Dilshod</h1>\r\n            <h2>{allPosts} posts, like {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import PostAddForm from \"./PostAddForm\";\r\nexport default PostAddForm;","import React from \"react\"\r\nimport \"./PostAddForm.css\"\r\nexport default class PostAddForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this)\r\n        this.onSabmit=this.onSabmit.bind(this)\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    onSabmit(e) {\r\n        e.preventDefault()\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text:''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form className='bottom-panel d-flex'  onSubmit={this.onSabmit}>\r\n                <input\r\n                    type='t ext'\r\n                    placeholder='What are you thinking about? '\r\n                    className='form-control new-post-label'\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className='btn btn-outline-secondary'\r\n                >Add Post</button>\r\n            </form>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport \"./PostListItem.css\"\r\nexport default class PostListItem extends React.Component {\r\n    render() {\r\n        const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props\r\n        let classNames = \"app-list-item d-flex justify-content-between\"\r\n        if (important) {\r\n            classNames += \" important\"\r\n        }\r\n        if (like) {\r\n            classNames += \" like\"\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\" onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className='d-flex justify-content-center align-item-center'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-star btn-sm'\r\n                        onClick={onToggleImportant}>\r\n                        <i className='fa fa-star'></i>\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-trash btn-sm'\r\n                        onClick={onDelete}>\r\n                        <i className='fa fa-trash'></i>\r\n                    </button>\r\n                    <button type='button'>\r\n                        <i className='fa fa-heart'></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// const PostListItem = ({ label, important = false }) => {\r\n//     let classNames = \"app-list-item d-flex justify-content-between\"\r\n//     if (important) {\r\n//         classNames += \" important\"\r\n//     }\r\n\r\n//     return (\r\n//         <div className={classNames}>\r\n//             <span className=\"app-list-item-label\">\r\n//                 {label}\r\n//             </span>\r\n//             <div className='d-flex justify-content-center align-item-center'>\r\n//                 <button type='button' className='btn-star btn-sm'>\r\n//                     <i className='fa fa-star'></i>\r\n//                 </button>\r\n//                 <button type='button' className='btn-trash btn-sm'>\r\n//                     <i className='fa fa-trash'></i>\r\n//                 </button>\r\n//                 <button type='button'>\r\n//                     <i className='fa fa-heart'></i>\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default PostListItem;","import PostListItem from \"./PostListItem\";\r\nexport default PostListItem;","import \"./PostList.css\"\r\nimport PostListItem from \"../PostListItem\";\r\n\r\nconst PostList = ({ posts, onDelete, onToggleLiked, onToggleImportant }) => {\r\n    const elements = posts.map((item) => {\r\n        const { id, ...itemProps } = item\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\nexport default PostList;","import PostStatusFilter from \"./PostStatusFilter\";\r\nexport default PostStatusFilter;","import React from \"react\";\r\n\r\nexport default class PostStatusFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'All' },\r\n            { name: 'like', label: 'Liked' }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button \r\n                key={name} \r\n                type='button' \r\n                className={` btn ${clazz}`}\r\n                onClick={() => this.props.onFilterSelect(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            )\r\n        })\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import SearchPanel from \"./SearchPanel\";\r\nexport default SearchPanel;","import React from \"react\";\r\n\r\nexport default class SearchPanel extends React.Component {\r\nconstructor (props) {\r\n    super(props);\r\n    this.state ={\r\n        term:''\r\n    }\r\n    this.onUpdateSearch=this.onUpdateSearch.bind(this)\r\n} \r\nonUpdateSearch (e) {\r\n    const term=e.target.value\r\n    this.setState({term:term})\r\n    this.props.onUpdateSearch(term);\r\n}\r\n \r\n    render() {\r\n        return(\r\n            <input \r\n            type='search' \r\n            className='form-control search-input'\r\n            placeholder='Search by posts' \r\n            onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import App from \"./App\";\r\nexport default App","import React from \"react\";\r\nimport AppHeader from \"../AppHeader\";\r\nimport PostAddForm from \"../PosrAddForm\";\r\nimport PostList from \"../PostList/PostList\";\r\nimport PostStatusFilter from \"../PostStastusFilter\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport './App.css'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"Going to React JS\", important: false, like: false, id: 1 },\r\n                { label: \"That is so good\", important: false, like: false, id: 2 },\r\n                { label: \"I need a break... \", important: false, like: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.onAdd = this.onAdd.bind(this)\r\n        this.onToggleImportant = this.onToggleImportant.bind(this)\r\n        this.onToggleLiked = this.onToggleLiked.bind(this)\r\n        this.maxId = 4;\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n        this.filterPost = this.filterPost.bind(this)\r\n        this.onFilterSelect=this.onFilterSelect.bind(this)\r\n    }\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const before = data.slice(0, index)\r\n            const after = data.slice(index + 1)\r\n\r\n            const newArry = [...before, ...after]\r\n            return {\r\n                data: newArry\r\n            }\r\n        })\r\n    }\r\n    onAdd(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, important: !oldItem.important }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, like: !oldItem.like }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter(item => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n    onUpdateSearch(term) {\r\n        this.setState({ term: term })\r\n\r\n    }\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n    onFilterSelect (filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter } = this.state\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visablePost = this.filterPost(this.searchPost(data, term), filter)\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList\r\n                    posts={visablePost}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm onAdd={this.onAdd} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}