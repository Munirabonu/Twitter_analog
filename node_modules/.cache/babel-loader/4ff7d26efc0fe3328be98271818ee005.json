{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lion\\\\Downloads\\\\Telegram Desktop\\\\my-app\\\\src\\\\component\\\\App\\\\App.js\";\nimport React from \"react\";\nimport AppHeader from \"../AppHeader\";\nimport PostAddForm from \"../PosrAddForm\";\nimport PostList from \"../PostList/PostList\";\nimport PostStatusFilter from \"../PostStastusFilter\";\nimport SearchPanel from \"../SearchPanel\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: \"Going to React JS\",\n        important: false,\n        like: false,\n        id: 1\n      }, {\n        label: \"That is so good\",\n        important: false,\n        like: false,\n        id: 2\n      }, {\n        label: \"I need a break... \",\n        important: false,\n        like: false,\n        id: 3\n      }],\n      term: '',\n      filter: ''\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.maxId = 4;\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n      const newArry = [...before, ...after];\n      return {\n        data: newArry\n      };\n    });\n  }\n\n  onAdd(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const oldItem = data[index];\n      const newItem = { ...oldItem,\n        important: !oldItem.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const oldItem = data[index];\n      const newItem = { ...oldItem,\n        like: !oldItem.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  onUpdateSearch(term) {\n    this.setState({\n      term: term\n    });\n  }\n\n  filterPost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visablePost = this.filterPost(this.searchPost(data, term), filter);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        liked: liked,\n        allPosts: allPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onUpdateSearch: this.onUpdateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {\n          filter: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: visablePost,\n        onDelete: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleLiked: this.onToggleLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n        onAdd: this.onAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lion/Downloads/Telegram Desktop/my-app/src/component/App/App.js"],"names":["React","AppHeader","PostAddForm","PostList","PostStatusFilter","SearchPanel","App","Component","constructor","props","state","data","label","important","like","id","term","filter","deleteItem","bind","onAdd","onToggleImportant","onToggleLiked","maxId","onUpdateSearch","setState","index","findIndex","elem","before","slice","after","newArry","body","newItem","newArr","oldItem","searchPost","items","length","item","indexOf","filterPost","render","liked","allPosts","visablePost"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AppHeader from \"../AppHeader\";\r\nimport PostAddForm from \"../PosrAddForm\";\r\nimport PostList from \"../PostList/PostList\";\r\nimport PostStatusFilter from \"../PostStastusFilter\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport './App.css'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"Going to React JS\", important: false, like: false, id: 1 },\r\n                { label: \"That is so good\", important: false, like: false, id: 2 },\r\n                { label: \"I need a break... \", important: false, like: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter:''\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.onAdd = this.onAdd.bind(this)\r\n        this.onToggleImportant = this.onToggleImportant.bind(this)\r\n        this.onToggleLiked = this.onToggleLiked.bind(this)\r\n        this.maxId = 4;\r\n        this.onUpdateSearch=this.onUpdateSearch.bind(this)\r\n    }\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const before = data.slice(0, index)\r\n            const after = data.slice(index + 1)\r\n\r\n            const newArry = [...before, ...after]\r\n            return {\r\n                data: newArry\r\n            }\r\n        })\r\n    }\r\n    onAdd(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, important: !oldItem.important }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const oldItem = data[index]\r\n\r\n            const newItem = { ...oldItem, like: !oldItem.like }\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    searchPost (items, term) {\r\n        if (term.length===0){\r\n            return items\r\n        }\r\n        return items.filter(item => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n    onUpdateSearch (term) {\r\n        this.setState({term:term})\r\n\r\n    }\r\n    filterPost (items,filter){\r\n        if(filter ==='like'){\r\n            return items.filter(item => item.like)\r\n        }else{\r\n            return items\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {data ,term , filter} =this.state\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visablePost =this.filterPost(this.searchPost(data, term),filter)\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter filter={filter} />\r\n                </div>\r\n                <PostList\r\n                    posts={visablePost}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm onAdd={this.onAdd} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}